// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    previewFeatures = ["jsonProtocol"]
}

datasource db {
    provider = "mysql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
    relationMode="prisma"
}

model unusedImages {
    id          String   @id @db.VarChar(255)

    @@map("inventory_unusedImages")
}

model items {
    id          Int      @id @default(autoincrement())
    name        String   @db.VarChar(255)
    description String   @db.VarChar(1023)
    image       String   @db.VarChar(255)
    categoryId  Int
    category    category @relation(fields: [categoryId], references: [id])
    quantity    Int      @db.TinyInt
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    bag         Int      @db.TinyInt
    packed      Boolean  @default(false)
    listId      Int
    list        lists    @relation(fields: [listId], references: [id])
    owner       String   @db.VarChar(255)

    @@index([categoryId])
    @@index([listId])
    @@map("inventory_items")
}

model lists {
    id          Int      @id @default(autoincrement())
    name        String   @db.VarChar(255)
    owner       String   @db.VarChar(255)
    createdAt   DateTime @default(now())
    items       items[]
    categories  category[]
    // bags        Int      @db.TinyInt

    @@map("inventory_lists")
}

// this should be named categories
model category {
    id          Int      @id @default(autoincrement())
    name        String   @db.VarChar(255)
    createdAt   DateTime @default(now())
    listId      Int
    list        lists    @relation(fields: [listId], references: [id])
    items       items[]

    @@index([listId])
    @@map("inventory_category")
}

// TODO: make these models better